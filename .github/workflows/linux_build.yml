name: Linux Build

on:
  push:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

env:
  GH_CACHE_KEY: 4

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        env: [
          {name: "Release",                       build_type: Release, arch: x86_64, os: ubuntu-latest,    upload: true,  cmake: ""},
          {name: "Release",                       build_type: Release, arch: arm64,  os: ubuntu-24.04-arm, upload: true,  cmake: ""},
          {name: "Debug",                         build_type: Debug,   arch: x86_64, os: ubuntu-latest,    upload: true,  cmake: ""},
          {name: "Debug D3D9 + Sokol + Asserts",  build_type: Debug,   arch: x86_64, os: ubuntu-latest,    upload: false, cmake: "-DOPTION_D3D9=ON -DOPTION_SOKOL=ON -DOPTION_DEBUG_ASSERT=ON"},
          {name: "Release D3D9 + Sokol",          build_type: Release, arch: x86_64, os: ubuntu-latest,    upload: false, cmake: "-DOPTION_D3D9=ON -DOPTION_SOKOL=ON"},
          {name: "Debug D3D9",                    build_type: Debug,   arch: x86_64, os: ubuntu-latest,    upload: false, cmake: "-DOPTION_D3D9=ON -DOPTION_SOKOL=OFF"},
          {name: "Debug Sokol",                   build_type: Debug,   arch: x86_64, os: ubuntu-latest,    upload: false, cmake: "-DOPTION_D3D9=OFF -DOPTION_SOKOL=ON"},
          {name: "Scripts Check",                 build_type: Release, arch: x86_64, os: ubuntu-latest,    upload: false, cmake: "-DOPTION_CHECK_SCRIPTS=ON "},
        ]
    name: ${{matrix.env.name}} ${{matrix.env.arch}}
    if: github.event.pull_request.draft != true
    runs-on: ${{matrix.env.os}}
    container:
      image: "debian:buster"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        id: cache
        with:
          path: |
            /opt/src
            /opt/out
          key: Linux-${{matrix.env.arch}}-${{ env.GH_CACHE_KEY }}
      - name: prepare env
        run: |
          chmod a+x ./docker/linux/prepare_pkgs
          ./docker/linux/prepare_pkgs
      - name: prepare boost
        run: |
          chmod a+x ./docker/prepare_boost
          ./docker/prepare_boost
      - name: build ffmpeg
        run: |
          chmod a+x ./docker/linux/prepare_ffmpeg
          ./docker/linux/prepare_ffmpeg
        if: steps.cache.outputs.cache-hit != 'true'
      - name: build sdl2
        run: |
          chmod a+x ./docker/linux/prepare_sdl_pkgs
          chmod a+x ./docker/linux/prepare_sdl
          ./docker/linux/prepare_sdl_pkgs
          ./docker/linux/prepare_sdl
        if: steps.cache.outputs.cache-hit != 'true'
      - name: Scripts check
        run: export CUSTOM_TARGET="ScriptsCheck"
        if: matrix.env.name == 'Scripts Check'
      - name: build
        run: |
          chmod a+x ./docker/linux/builder
          export LIBS_ROOT=/opt/out
          ./docker/linux/builder \
            -DCMAKE_BUILD_TYPE=${{matrix.env.build_type}} \
            ${{matrix.env.cmake}}
      - uses: actions/upload-artifact@v4
        with:
          name: Perimeter ${{matrix.env.build_type}} ${{matrix.env.arch}}
          path: ./build/docker-linux/output/Perimeter.tar
        if: matrix.env.upload
